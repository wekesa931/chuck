{"version":3,"sources":["Components/Categories/Categories.js","Components/Home/Home.js","Components/SingleCategory/SingleCategory.js","App.js","reportWebVitals.js","index.js"],"names":["Categories","props","useState","categories","setcategories","useEffect","a","fetch","response","json","res","console","log","getCategories","className","map","cat","to","s","toUpperCase","slice","Home","random","setrandom","setInterval","value","e","getSingleJoke","withRouter","joke","setjoke","counter","setcounter","match","params","category","getJokeByCategory","onClick","history","push","App","id","src","alt","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQA2BeA,EArBI,SAACC,GAAW,IAAD,EACUC,mBAAS,IADnB,mBACnBC,EADmB,KACPC,EADO,KAc1B,OAZAC,qBAAU,YACa,uCAAG,8BAAAC,EAAA,+EAESC,MAAM,+CAFf,cAERC,EAFQ,gBAGIA,EAASC,OAHb,OAGRC,EAHQ,OAIdN,EAAcM,GAJA,kDAMdC,QAAQC,IAAR,MANc,0DAAH,qDASnBC,KACD,IACI,qBAAKC,UAAU,iBAAf,SACFX,EAAWY,KAAI,SAAAC,GAAG,OACf,cAAC,IAAD,CAAMC,GAAE,0BAAqBD,GAAiBF,UAAU,kBAAxD,UAnBQI,EAmB8EF,EAlBvFE,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,KAkBaJ,GAnBlC,IAACE,QCqCLG,EArCF,WAAO,IAAD,EACanB,mBAAS,IADtB,mBACRoB,EADQ,KACAC,EADA,KA4Bf,OAzBAlB,qBAAU,WACN,IACImB,YAAW,sBAAC,8BAAAlB,EAAA,sEACeC,MAAM,2CADrB,cACFC,EADE,gBAEUA,EAASC,OAFnB,OAEFC,EAFE,OAGRa,EAAUb,EAAIe,OAHN,2CAIT,KACH,MAAMC,GACNf,QAAQC,IAAIc,MAEjB,IACHrB,qBAAU,YACa,uCAAG,8BAAAC,EAAA,+EAEaC,MAAM,2CAFnB,cAEJC,EAFI,gBAGQA,EAASC,OAHjB,OAGJC,EAHI,OAIVa,EAAUb,EAAIe,OAJJ,kDAMVd,QAAQC,IAAR,MANU,0DAAH,qDASnBe,KACD,IAGI,gCAEH,8BACKL,IAEL,cAAC,EAAD,QCNOM,eA3BQ,SAAC3B,GAAW,IAAD,EACNC,qBADM,mBACvB2B,EADuB,KACjBC,EADiB,OAEA5B,mBAAS,GAFT,mBAEvB6B,EAFuB,KAEdC,EAFc,KAmB9B,OAhBArB,QAAQC,IAAI,iCAAkCmB,GAC9C1B,qBAAU,WACNM,QAAQC,IAAI,gBACW,uCAAG,8BAAAN,EAAA,+EAEKC,MAAM,oDAAD,OAAqDN,EAAMgC,MAAMC,OAAOC,WAFlF,cAEZ3B,EAFY,gBAGAA,EAASC,OAHT,OAGZC,EAHY,OAIlBoB,EAAQpB,EAAIe,OAJM,kDAMlBd,QAAQC,IAAR,MANkB,0DAAH,oDASvBwB,KACD,CAACL,IAGK,gCACL,4BAAIF,IACR,wBAAQQ,QAAS,kBAAML,GAAW,SAAAD,GAAO,OAAIA,EAAU,MAAvD,8BACA,uBACA,wBAAQM,QAAS,kBAAMpC,EAAMqC,QAAQC,KAAK,MAA1C,6BCFWC,MAdf,WACE,OACE,sBAAK1B,UAAU,MAAf,UACE,qBAAK2B,GAAG,YAAYC,IAAI,wEAAwEC,IAAI,UACpG,cAAC,IAAD,UACI,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,UAAsB,cAAC,EAAD,IAAtB,OACA,eAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,4BAAlB,UAA8C,cAAC,EAAD,IAA9C,gBCLGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5ae9585e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst capitalize = (s) => {\r\n    return s[0].toUpperCase() + s.slice(1);\r\n}\r\nconst Categories = (props) => {\r\n    const [categories, setcategories] = useState([]);\r\n    useEffect(() => {\r\n        const getCategories = async () => {\r\n            try {\r\n                const response = await fetch(\"https://api.chucknorris.io/jokes/categories\")\r\n                const res = await response.json()\r\n                setcategories(res)\r\n            } catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n        getCategories()\r\n    }, []);\r\n    return <div className='category-names'>\r\n        {categories.map(cat => (\r\n            <Link to={`/singleCategory/${cat}`} key={cat} className='sinlge-category'>{capitalize(cat)}</Link>\r\n        ))}\r\n    </div>\r\n}\r\n \r\nexport default Categories;","import React, { useState, useEffect } from 'react';\r\nimport Categories from '../Categories/Categories'\r\n\r\nconst Home = () => {\r\n    const [random, setrandom] = useState('');\r\n\r\n    useEffect(() => {\r\n        try {\r\n            setInterval(async () => {\r\n                const response = await fetch('https://api.chucknorris.io/jokes/random');\r\n                const res = await response.json()\r\n                setrandom(res.value)\r\n            }, 5000);\r\n          } catch(e) {\r\n            console.log(e);\r\n          }\r\n    }, []);\r\n    useEffect(() => {\r\n        const getSingleJoke = async () => {\r\n            try {\r\n                    const response = await fetch('https://api.chucknorris.io/jokes/random');\r\n                    const res = await response.json()\r\n                    setrandom(res.value)\r\n                } catch(e) {\r\n                    console.log(e);\r\n            }\r\n        }\r\n        getSingleJoke()\r\n    }, []);\r\n\r\n\r\n    return <div>\r\n        \r\n        <div>\r\n            {random}\r\n        </div>\r\n        <Categories />\r\n    </div>\r\n}\r\n \r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst SingleCategory = (props) => {\r\n    const [joke, setjoke] = useState();\r\n    const [counter, setcounter] = useState(0);\r\n    console.log(\"TCL: SingleCategory -> counter\", counter)\r\n    useEffect(() => {\r\n        console.log(\"getting joke\")\r\n        const getJokeByCategory = async () => {\r\n            try {\r\n                const response = await fetch(`https://api.chucknorris.io/jokes/random?category=${props.match.params.category}`)\r\n                const res = await response.json()\r\n                setjoke(res.value)\r\n            } catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n        getJokeByCategory()\r\n    }, [counter]);\r\n\r\n\r\n    return ( <div>\r\n        <p>{joke}</p>\r\n    <button onClick={() => setcounter(counter => counter + 1 )}>Get another Joke</button>\r\n    <br />\r\n    <button onClick={() => props.history.push(\"/\")}>Back Home</button>\r\n    </div> );\r\n}\r\n \r\nexport default withRouter(SingleCategory);","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\"\nimport './App.css';\nimport Home from './Components/Home/Home'\nimport SingleCategory from './Components/SingleCategory/SingleCategory'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img id='chuck-img' src=\"https://api.chucknorris.io/img/chucknorris_logo_coloured_small@2x.png\" alt=\"chuck\"/>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\"><Home /> </Route>\n            <Route exact path=\"/singleCategory/:category\"><SingleCategory /> </Route>\n          </Switch>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}